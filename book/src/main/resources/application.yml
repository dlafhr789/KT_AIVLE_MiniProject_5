server:
  port: 8080  # book 서비스 포트

spring:
  application:
    name: book  # 애플리케이션 이름
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092  # 로컬에 실행된 Kafka 서버 주소
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: book
#<<< EDA / Topic Name
          destination: ktaivlethminiproject
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: ktaivlethminiproject
#>>> EDA / Topic Name
          contentType: application/json

# logging:
#   level:
#     org.hibernate.type: trace
#     org.springframework.cloud: debug
logging:
  level:
    # Spring Web과 관련된 모든 로그를 DEBUG 레벨로 출력하여
    # 요청 처리 과정의 상세한 정보를 확인합니다.
    org.springframework.web: DEBUG
    
    # (선택) Hibernate가 실행하는 SQL의 변수 값까지 보고 싶을 때 사용합니다.
    org.hibernate.type.descriptor.sql: trace

server:
  port: 8082

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: book
          destination: ktaivlethminiproject
          contentType: application/json
        event-out:
          destination: ktaivlethminiproject
          contentType: application/json
